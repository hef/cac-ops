---
version: 3

env:
  ANSIBLE_CONFIG: "{{.PROJECT_DIR}}/ansible.cfg"

vars:
  ANSIBLE_PLAYBOOK_DIR: "{{.ANSIBLE_DIR}}/playbooks"
  ANSIBLE_INVENTORY_DIR: "{{.ANSIBLE_DIR}}/inventory"

tasks:
  deps:
    desc: Upgrade Ansible galaxy deps
    dir: provision/ansible
    cmds:
      - ansible-galaxy install -r requirements.yml --force

  list:
    desc: List all the hosts
    dir: provision/ansible
    cmds:
      - "ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --list-hosts"

  adhoc:ping:
    desc: Ping all the hosts
    dir: provision/ansible
    cmds:
      - "ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -m 'ping'"

  adhoc:uptime:
    desc: Uptime of all the hosts
    dir: provision/ansible
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -a 'uptime'

  adhoc:reboot:
    desc: Reboot all the k8s nodes
    dir: provision/ansible
    cmds:
      - "ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml -a '/bin/systemctl reboot' --become"

  adhoc:poweroff:
    desc: Shutdown all the k8s nodes
    dir: provision/ansible
    cmds:
      - "ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml -a '/bin/systemctl poweroff' --become"

  adhoc:lsb_release:
    desc: Get LSB Release of all nodes
    dir: provision/ansible
    cmds:
      - "ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -a 'lsb_release -d' --become"

  playbook:ubuntu-prepare:
    desc: Prepare all the k8s nodes for running k3s
    dir: provision/ansible
    cmds:
      - "ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/ubuntu-prepare.yml"

  playbook:ubuntu-upgrade:
    desc: Upgrade all the k8s nodes operating system
    dir: provision/ansible
    cmds:
      - "ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/ubuntu-upgrade.yml"

  playbook:k3s-install:
    desc: Install Kubernetes on the nodes
    dir: provision/ansible
    cmds:
      - "ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/k3s-install.yml"

  playbook:k3s-nuke:
    desc: Uninstall Kubernetes on the nodes
    dir: provision/ansible
    cmds:
      - "ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/k3s-nuke.yml"
      -
  playbook:cac-resize:
    desc: resize root drive
    dir: provision/ansible
    cmds:
      - "ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cac-resize.yml"

  playbook:cac-fixdisk:
    desc: fix failed lvm2 stuff
    dir: provision/ansible
    cmds:
      - "ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cac-fixdisk.yml"

  adhoc:df:
    desc: run df
    dir: provision/ansible
    cmds:
      - "ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -a 'bash -c \"df -h /dev/mapper/ubuntu--vg-root | tail -n +2\" ' --become"
  adhoc:partprobe:
    desc: run df
    dir: provision/ansible
    cmds:
      - "ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -a 'partprobe' --become"
